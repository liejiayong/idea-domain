(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{687:function(t,s,a){"use strict";a.r(s);var n=a(9),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("持续更新...")]),t._v(" "),a("p",[t._v("Unix 哲学：“没有消息就是好消息”")])]),t._v(" "),a("p",[t._v("Git，一个代码管理库")]),t._v(" "),a("ul",[a("li",[t._v("feat：增加一个新功能")]),t._v(" "),a("li",[t._v("fix：修复 bug")]),t._v(" "),a("li",[t._v("docs：只修改了文档")]),t._v(" "),a("li",[t._v("style：做了不影响代码含义的修改，空格、格式化、缺少分号等等")]),t._v(" "),a("li",[t._v("refactor：代码重构，既不是修复 bug，也不是新功能的修改")]),t._v(" "),a("li",[t._v("perf：改进性能的代码")]),t._v(" "),a("li",[t._v("test：增加测试或更新已有的测试")]),t._v(" "),a("li",[t._v("chore：构建或辅助工具或依赖库的更新")])]),t._v(" "),a("h1",{attrs:{id:"vim"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim"}},[t._v("#")]),t._v(" VIM")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("进入vim编辑，写注释\n*******************************************************************\n1、k,j,h,l   光标上下左右 （也可以使用上下左右键）\n2、o\t     在当前行下方插入新行并进入插入模式 (一般写注释，注释要详细)\n3、:wq\t     保存并退出\n注意：注释添加完毕后需要先将输入法切换为英文并按ESC键输入:wq指令后按Enter\n*******************************************************************\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h1",{attrs:{id:"工作区域和流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工作区域和流程"}},[t._v("#")]),t._v(" 工作区域和流程")]),t._v(" "),a("h2",{attrs:{id:"workspace-directory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#workspace-directory"}},[t._v("#")]),t._v(" Workspace Directory")]),t._v(" "),a("p",[t._v("工作区，简言之就是你工作的区域，在开发的过程也就是对工作区的操作。对于 git 而言，就是的本地工作目录。工作区的内容会包含提交到暂存区和版本库(当前提交点)的内容，同时也包含自己的修改内容。此时文件处于 untracked（未追踪） 状态。")]),t._v(" "),a("h2",{attrs:{id:"stage-area-又称索引区-index-暂存区域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stage-area-又称索引区-index-暂存区域"}},[t._v("#")]),t._v(" Stage Area(又称索引区 Index | 暂存区域)")]),t._v(" "),a("p",[t._v("暂存区，将修改提交本地仓库前的一个过渡阶段。在工作目录下有一个.git 的目录，里面有个 index 文件，存储着关于暂存区的内容。当执行 git add 的命令后，工作区的文件就会被移入暂存区，暂存区标记了当前工作区中那些内容是被 Git 管理的，当完成某个需求或者功能后需要提交代码，第一步就是通过 git add 先提交到暂存区。 此时文件处于 unstaged 状态。")]),t._v(" "),a("h2",{attrs:{id:"local-repository"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#local-repository"}},[t._v("#")]),t._v(" Local Repository")]),t._v(" "),a("p",[t._v("本地仓库。版本控制系统的仓库，存在于本地磁盘。当执行 git commit 命令后，会将暂存区内容提交到本地仓库之中。在工作区下面有.git 的目录，这个目录下的内容不属于工作区，里面便是本地仓库的数据信息，暂存区相关内容也在其中。这里也可以使用 merge 或 rebase 将远程仓库副本合并到本地仓库。图中的只有 merge，注意这里也可以使用 rebase。")]),t._v(" "),a("h2",{attrs:{id:"remote-repository"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remote-repository"}},[t._v("#")]),t._v(" Remote Repository")]),t._v(" "),a("p",[t._v("远程仓库，与本地仓库概念基本一致，不同之处在于一个存在远程，可用于远程协作，一个却是存在于本地。用来托管代码的服务器，远程仓库的内容能够被分布在多个地点的处于协作关系的本地仓库修改，本地仓库修改完代码后通过 git push/pull 可实现本地与远程的交互。")]),t._v(" "),a("h2",{attrs:{id:"远程仓库的本地副本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#远程仓库的本地副本"}},[t._v("#")]),t._v(" 远程仓库的本地副本")]),t._v(" "),a("p",[t._v("可以理解为存在于本地的远程仓库缓存。如需更新，可通过 git fetch/pull 命令获取远程仓库内容。使用 fech 获取时，并未合并到本地仓库，此时可使用 git merge 实现远程仓库副本与本地仓库的合并。git pull 根据配置的不同，可为 git fetch + git merge 或 git fetch + git rebase。")]),t._v(" "),a("h1",{attrs:{id:"对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[t._v("#")]),t._v(" 对象")]),t._v(" "),a("h1",{attrs:{id:"git-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-配置"}},[t._v("#")]),t._v(" GIT 配置")]),t._v(" "),a("p",[t._v("本地 Git 仓库和 GitHub 仓库之间的传输是通过 SSH 加密的，因此 Git 需要绑定本地计算机环境的公钥。")]),t._v(" "),a("h2",{attrs:{id:"git-绑定-ssh-步骤："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-绑定-ssh-步骤："}},[t._v("#")]),t._v(" Git 绑定 SSH 步骤：")]),t._v(" "),a("ul",[a("li",[t._v("下载 "),a("a",{attrs:{href:"https://git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 计算机对应系统版本"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("li",[t._v("打开 bash shell 在根目录 上运行命令 ssh-keygen 生成 .ssh 公\\私钥文件："),a("code",[t._v('ssh-keygen -t rsa -C "[youremail@example.com]"')]),t._v(" "),a("ul",[a("li",[t._v("公钥："),a("code",[t._v("id_rsa.pub")])]),t._v(" "),a("li",[t._v("私钥："),a("code",[t._v("id_rsa")])])])]),t._v(" "),a("li",[t._v("以 Github 为例，进入 Github 网站，然后 "),a("code",[t._v("Settings > SSH and GPG keys > 在SSH keys栏目点击New SSH key添加公钥id_rsa.pub")]),t._v("。这一步等于说把你的公钥放到了 Github 上进行托管。")]),t._v(" "),a("li",[t._v("最后运行验证连通性： "),a("code",[t._v("ssh -T git@github.com")])]),t._v(" "),a("li",[t._v("全局配置 Git 的用户名和邮箱:")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx@xx.com"')]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global core.autocrlf "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改git全局配置，禁止git自动将lf转换成crlf")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global core.eol lf "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置全局git命令文件换行使用lf方式或者在terminal中对单个git代码仓库执行git config core.eol lf使用lf换行方式（这一步也可以不配置）")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global core.autocrlf input "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交时转换为lf，检出时不转换")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global core.safecrlf "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拒绝提交包含混合换行符的文件")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("完成以上几步，你就可以愉快 pull&push 代码了。")]),t._v(" "),a("h2",{attrs:{id:"https-与-ssh-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#https-与-ssh-区别"}},[t._v("#")]),t._v(" HTTPS 与 SSH 区别")]),t._v(" "),a("ul",[a("li",[t._v("HTTPS：不管是谁，拿到 url 随便 clone，但是在 push 的时候需要验证用户名和密码；")]),t._v(" "),a("li",[t._v("SSH：clone 的项目你必须是拥有者或者管理员，而且需要在 clone 前添加 SSH Key。SSH 在 push 的时候，是不需要输入用户名的，如果配置 SSH key 的时候设置了密码，则需要输入密码的，否则直接是不需要输入密码的。")])]),t._v(" "),a("h1",{attrs:{id:"git-使用操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-使用操作"}},[t._v("#")]),t._v(" Git 使用操作")]),t._v(" "),a("h2",{attrs:{id:"git-config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-config"}},[t._v("#")]),t._v(" git config")]),t._v(" "),a("p",[t._v("Git 配置操作。")]),t._v(" "),a("ul",[a("li",[t._v("语法："),a("code",[t._v("git config [<options>]")])])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config -l "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查用户配置")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置用户全局配置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx@xx.com"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global core.autocrlf "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置文件行结束符为lf模式")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h2",{attrs:{id:"git-init"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-init"}},[t._v("#")]),t._v(" git init")]),t._v(" "),a("p",[t._v("初始化 Git 仓库。")]),t._v(" "),a("ul",[a("li",[t._v("语法："),a("code",[t._v("git init")])])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建创库")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"git-remote"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-remote"}},[t._v("#")]),t._v(" git remote")]),t._v(" "),a("p",[t._v("配置、重命名、删除远程仓库操作。")]),t._v(" "),a("p",[t._v("在本地环境使用"),a("code",[t._v("git init")]),t._v("初始化 Git 仓库后，需要配置远程仓库的"),a("code",[t._v("remote_label")]),t._v("和远程仓库的"),a("code",[t._v("remote_url")]),t._v("，")]),t._v(" "),a("p",[t._v("其中"),a("code",[t._v("remote_label")]),t._v("用于平常的 Git 操作，通常命名为 "),a("code",[t._v("origin")]),t._v("、"),a("code",[t._v("git")]),t._v("、"),a("code",[t._v("gitlab")]),t._v("等，如："),a("code",[t._v("git push origin xxx")]),t._v(", "),a("code",[t._v("origin")]),t._v("就是配置的"),a("code",[t._v("remote_url")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("remote_url")]),t._v("就是远程仓库用于下载源码的链接，链接有两种方式分别为"),a("code",[t._v("HTTPS")]),t._v("和"),a("code",[t._v("SSH")]),t._v("。以 git 为例：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("https://git.com/liejiayong/jtools.git")])]),t._v(" "),a("li",[a("p",[t._v("git@git.com:liejiayong/jtools.git")])]),t._v(" "),a("li",[a("p",[t._v("语法：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("git remote [-v | --verbose]")])]),t._v(" "),a("li",[a("code",[t._v("git remote add [-t <branch>][-m <master>] [-f][--tags | --no-tags] [--mirror=<fetch|push>] <name> <url>")])]),t._v(" "),a("li",[a("code",[t._v("git remote rename <old> <new>")])]),t._v(" "),a("li",[a("code",[t._v("git remote remove <name>")])]),t._v(" "),a("li",[a("code",[t._v("git remote set-head <name> (-a | --auto | -d | --delete | <branch>)")])]),t._v(" "),a("li",[a("code",[t._v("git remote [-v | --verbose] show [-n] <name>")])]),t._v(" "),a("li",[a("code",[t._v("git remote prune [-n | --dry-run] <name>")])]),t._v(" "),a("li",[a("code",[t._v("git remote [-v | --verbose] update [-p | --prune][(<group> | <remote>)...]")])]),t._v(" "),a("li",[a("code",[t._v("git remote set-branches [--add] <name> <branch>...")])]),t._v(" "),a("li",[a("code",[t._v("git remote get-url [--push][--all] <name>")])]),t._v(" "),a("li",[a("code",[t._v("git remote set-url [--push] <name> <newurl> [<oldurl>]")])]),t._v(" "),a("li",[a("code",[t._v("git remote set-url --add <name> <newurl>")])]),t._v(" "),a("li",[a("code",[t._v("git remote set-url --delete <name> <url>")])])])])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote_label"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote_url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置远程仓库")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("old_remote_label"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("new_remote_label"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 远程仓库名称重设")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote remove "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote_label"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除远程仓库配置")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote set-url "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote_label"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote_url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重新设置已配置的远程仓库的链接")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h2",{attrs:{id:"git-mv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-mv"}},[t._v("#")]),t._v(" git mv")]),t._v(" "),a("p",[t._v("文件移动、重命名操作。")]),t._v(" "),a("ul",[a("li",[t._v("语法："),a("code",[t._v("git mv [<options>] <source>... <destination>")])])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" old_file new_file   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对已跟踪的文件进行重命名操作")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" folder "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 移动file到folder")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" file1 file2 folder "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 移动file、file1到folder")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h2",{attrs:{id:"git-rm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-rm"}},[t._v("#")]),t._v(" git rm")]),t._v(" "),a("p",[t._v("文件删除操作。")]),t._v(" "),a("ul",[a("li",[t._v("语法："),a("code",[t._v("git rm [<options>] [--] <file>...")])])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -rf file.js   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除已跟踪的文件清单中的文件")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"git-status"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-status"}},[t._v("#")]),t._v(" git status")]),t._v(" "),a("p",[t._v("Git 仓库状态操作。")]),t._v(" "),a("ul",[a("li",[t._v("语法："),a("code",[t._v("git status [<options>] [--] <pathspec>...")])])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看仓库状态。默认详情状态")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status -s   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看仓库简明状态")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status --show-stash   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看仓库隐藏信息状m态")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h2",{attrs:{id:"git-diff"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-diff"}},[t._v("#")]),t._v(" git diff")]),t._v(" "),a("p",[t._v("查看 Git 仓库文档修改状态，显示修改字段。")]),t._v(" "),a("ul",[a("li",[t._v("语法：\n"),a("ul",[a("li",[a("code",[t._v("git diff [<options>] [<commit>] [--][<path>...]")])]),t._v(" "),a("li",[a("code",[t._v("git diff [<options>] --cached [<commit>][--] [<path>...]")])]),t._v(" "),a("li",[a("code",[t._v("git diff [<options>] <commit> [--merge-base] [<commit>...] <commit> [--][<path>...]")])]),t._v(" "),a("li",[a("code",[t._v("git diff [<options>] <commit>...<commit>] [--][<path>...]")])]),t._v(" "),a("li",[a("code",[t._v("git diff [<options>] <blob> <blob>]")])]),t._v(" "),a("li",[a("code",[t._v("git diff [<options>] --no-index [--] <path> <path>]")])])])])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看仓库显示修改字段")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"git-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-log"}},[t._v("#")]),t._v(" git log")]),t._v(" "),a("p",[t._v("查看 Git 当前分支的提交记录。")]),t._v(" "),a("ul",[a("li",[t._v("语法：\n"),a("ul",[a("li",[a("code",[t._v("git log [<options>] [<revision-range>] [[--] <path>...]")])]),t._v(" "),a("li",[a("code",[t._v("git show [<options>] <object>...")])])])])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看当前分支的提交记录")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"git-reflog"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-reflog"}},[t._v("#")]),t._v(" git reflog")]),t._v(" "),a("p",[t._v("查看 Git 所有提交记录的历史操作记录。")]),t._v(" "),a("ul",[a("li",[t._v("语法："),a("code",[t._v("git reflog [ show | expire | delete | exists ]")])])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看历史操作记录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog show  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看历史操作记录")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"git-add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-add"}},[t._v("#")]),t._v(" git add")]),t._v(" "),a("p",[t._v("工作区文件添加到暂存区。")]),t._v(" "),a("ul",[a("li",[t._v("语法："),a("code",[t._v("git add [path_name]")])])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将当前工作区文件添加到暂存区")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"git-commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-commit"}},[t._v("#")]),t._v(" git commit")]),t._v(" "),a("p",[t._v("暂存区文件添加到本地仓库。")]),t._v(" "),a("ul",[a("li",[t._v("语法："),a("code",[t._v("git commit --[params] [commit_msg]")])])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[commit_msg]"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 暂存区文件添加到本地仓库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit --amend "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [commit_msg]内容写错，需要重新提交内容时使用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -am "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等同于 git add . && git commit -m")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h2",{attrs:{id:"git-push"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-push"}},[t._v("#")]),t._v(" git push")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"git-rebase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase"}},[t._v("#")]),t._v(" git rebase")]),t._v(" "),a("p",[t._v("控制版本的分支的基准")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"git-pull"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-pull"}},[t._v("#")]),t._v(" git pull")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从远程仓库拉取代码并合并到本地，可简写为 git pull 等同于 git fetch && git merge")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("local_branch_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# local_branch_name、branch_name名字相同时")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用rebase的模式进行合并")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull --rebase "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("local_branch_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h2",{attrs:{id:"git-fetch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-fetch"}},[t._v("#")]),t._v(" git fetch")]),t._v(" "),a("p",[t._v("与 git pull 不同的是 git fetch 操作仅仅只会拉取远程的更改，不会自动进行 merge 操作。对你当前工作区的代码没有影响")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取远程仓库特定分支的更新")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取远程仓库所有分支的更新")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch --all\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 取回更新后，会返回一个FETCH_HEAD ，指的是某个branch在服务器上的最新状态，我们可以在本地通过它查看刚取回的更新信息：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log -p FETCH_HEAD\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将拉取下来的最新内容合并到当前所在的分支中")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge FETCH_HEAD\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git拉取远程新分支到本地")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch origin develop\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b develop origin/develop\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin develop\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("h2",{attrs:{id:"git-branch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-branch"}},[t._v("#")]),t._v(" git branch")]),t._v(" "),a("p",[t._v("分支的创建、删除、查看。")]),t._v(" "),a("p",[t._v("Git 中保存着一个名为 "),a("code",[t._v("HEAD")]),t._v(" 的特别指针，这个指针指向了当前的工作分支。")]),t._v(" "),a("p",[t._v("切换分支，实际是切换 HEAD 指针的指向。")]),t._v(" "),a("ul",[a("li",[t._v("语法："),a("code",[t._v("git branch --[params] [branch_name]")])])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看分支状态")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -r "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看远程分支")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -a "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看本地和远程分支")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建分支，但不切换")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -D "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除本地分支")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -m "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("old_branch_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("new_branch_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重新命名分支")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h2",{attrs:{id:"git-merge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-merge"}},[t._v("#")]),t._v(" git merge")]),t._v(" "),a("p",[t._v("合并分支。用于当前分支合并其他分支所有内容。")]),t._v(" "),a("p",[t._v("具体操作是，在需要合并的分支输入合并分支命令。")]),t._v(" "),a("p",[t._v("当合并分支时不想要被合并分支之前的 commit 提交记录，可以使用参数 "),a("code",[t._v("--squash")]),t._v("。")]),t._v(" "),a("ul",[a("li",[t._v("语法： "),a("code",[t._v("git merge [branch_name]")])])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当前分支合并branch_name分支")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --squash "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当前分支合并branch_name分支，且不合并branch_name分支的commit提交记录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<commit_msg>"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当合并分支使用--squash后，需要重新提交commit记录")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h2",{attrs:{id:"git-checkout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout"}},[t._v("#")]),t._v(" git checkout")]),t._v(" "),a("p",[t._v("切换分支。还可以用于在切换分支时创建分支。")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到branch_name分支")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建branch_name分支，并将当前分支切换到branch_name分支")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout --orphan "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建无父节点的分支branch_name。此分支无拷贝当前所在分支的所有文件，且任何历史log。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -rf "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除本分支下所有文件")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h2",{attrs:{id:"git-reset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-reset"}},[t._v("#")]),t._v(" git reset")]),t._v(" "),a("p",[t._v("撤回已提交版本。")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回退所有内容到上一个版本")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HEAD^\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回退a.py这个文件的版本到上一个版本")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HEAD^ a.py\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 向前回退到第3个版本")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset –soft HEAD~3\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将本地的状态回退到和远程的一样")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset –hard "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回退到某个版本057d")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset 057d\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回退到上一次提交的状态，按照某一次的commit完全反向的进行一次commit")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert HEAD\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])]),a("p",[t._v("共有三种模式：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("--hard")])]),t._v(" "),a("li",[a("code",[t._v("--soft")])]),t._v(" "),a("li",[a("code",[t._v("-- mixed")])])]),t._v(" "),a("h3",{attrs:{id:"git-reset-hard-commit-id-重置-暂存区-和-工作区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-hard-commit-id-重置-暂存区-和-工作区"}},[t._v("#")]),t._v(" "),a("code",[t._v("git reset --hard [commit_id]")]),t._v(" : 重置 暂存区 和 工作区")]),t._v(" "),a("p",[a("code",[t._v("--hard")]),t._v(" 模式 会在重置 "),a("code",[t._v("HEAD")]),t._v(" 和 "),a("code",[t._v("branch")]),t._v(" 的指针位置 的同时，重置 暂存区 和 工作区里的内容。")]),t._v(" "),a("p",[t._v("此时，"),a("code",[t._v("git commit")]),t._v(" 记录强制回溯到某一个提交节点 "),a("code",[t._v("commit_id")]),t._v("，同时 "),a("code",[t._v("commit_id")]),t._v(" 之前的记录与修改内容会彻底删除。")]),t._v(" "),a("p",[t._v("换句话说，就是没有 "),a("code",[t._v("git commit")]),t._v(" 的修改会被全部擦掉，已 "),a("code",[t._v("git commit")]),t._v(" 的内容会在"),a("code",[t._v("git log")]),t._v("中删掉，需要在"),a("code",[t._v("git reflog 中查找历史提交信息")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"git-reset-soft-commit-id-保留工作区，并将已-commit-到仓库的内容放到暂存区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-soft-commit-id-保留工作区，并将已-commit-到仓库的内容放到暂存区"}},[t._v("#")]),t._v(" "),a("code",[t._v("git reset --soft [commit_id]")]),t._v(" : 保留工作区，并将已 "),a("code",[t._v("commit")]),t._v(" 到仓库的内容放到暂存区")]),t._v(" "),a("p",[a("code",[t._v("--soft")]),t._v(" 模式 会在重置 "),a("code",[t._v("HEAD")]),t._v(" 和 "),a("code",[t._v("branch")]),t._v(" 的指针位置 的同时，保留工作区和暂存区中的内容，并把重置 HEAD 指针位置 所带来的新的差异放进暂存区（将已 "),a("code",[t._v("commit")]),t._v(" 到仓库的内容放到暂存区）。")]),t._v(" "),a("p",[t._v("什么是「重置 HEAD 所带来的新的差异」？重置 "),a("code",[t._v("HEAD")]),t._v(" 和 "),a("code",[t._v("branch")]),t._v(" 的指针位置，就等于 "),a("code",[t._v("HEAD")]),t._v("指针回退到上一个版本，类似于 "),a("code",[t._v("HEAD@{1}")]),t._v(" 到 "),a("code",[t._v("HEAD@{0}")]),t._v(" 的过程，但指针回退后已经被 "),a("code",[t._v("git commit")]),t._v(" 的内容回本放到暂存区。")]),t._v(" "),a("p",[t._v("此模式保留了工作区的内容，同时将当前版本节点到目标版本节点的内容保留在暂存区，让其与重置前暂存区与工作区的内容保持一致。")]),t._v(" "),a("p",[t._v("此时可以直接执行 "),a("code",[t._v("git add 和 git commit")]),t._v(" 分别将工作区、暂存区的内容提交到仓库，如果由于版本不同无法提交可以加"),a("code",[t._v("-f")]),t._v("处理"),a("code",[t._v("git push [remote_name] [branch_name] -f")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("--soft")]),t._v(" 如其名如柔软般撤回信息，除了回溯到节点 "),a("code",[t._v("commit_id")]),t._v(" 外，还会保留最新节点的修改内容，类似于只撤回 "),a("code",[t._v("git commit -m [commit_msg]")]),t._v(" 中的 提交信息 "),a("code",[t._v("commit_msg")]),t._v("。")]),t._v(" "),a("p",[t._v("所以当我们想合并「当前节点」与「reset 目标节点」之间不具太大意义的 commit 记录(可能是阶段性地频繁提交)時，可以考虑使用 Soft Reset 来让 commit 演进线图较为清晰点。")]),t._v(" "),a("h3",{attrs:{id:"git-reset-commit-id-保留工作区，并将已-commit-到仓库的内容和暂存区放到工作区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-commit-id-保留工作区，并将已-commit-到仓库的内容和暂存区放到工作区"}},[t._v("#")]),t._v(" "),a("code",[t._v("git reset [commit_id]")]),t._v(" : 保留工作区，并将已 "),a("code",[t._v("commit")]),t._v(" 到仓库的内容和暂存区放到工作区")]),t._v(" "),a("p",[a("code",[t._v("git reset")]),t._v(" 不带参数则默认使用"),a("code",[t._v("--mixed")]),t._v("模式。")]),t._v(" "),a("p",[a("code",[t._v("--mixed")]),t._v("模式 会在重置 "),a("code",[t._v("HEAD")]),t._v(" 和 "),a("code",[t._v("branch")]),t._v(" 的指针位置 的同时，会保留工作目录，并将已 "),a("code",[t._v("commit")]),t._v(" 到仓库的内容和暂存区放到工作区，并且清空暂存区。")]),t._v(" "),a("p",[t._v("换而言之，将工作区的修改、暂存区的内容以及由 reset 所导致的新的文件差异，都会被放进工作区。")]),t._v(" "),a("p",[t._v("简而言之，就是「把所有差异都混合（mixed）放在工作目录中」。")]),t._v(" "),a("h3",{attrs:{id:"三种模式区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三种模式区别"}},[t._v("#")]),t._v(" 三种模式区别:")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("--hard")]),t._v(" : 重置指针位置的同时，将工作区、暂存区及仓库都重置回退到 [commit_id] 目标节点的内容。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("--soft")]),t._v(" : 重置指针位置的同时，保留工作区和暂存区的内容，只让仓库中的内容和 [commit_id] 目标节点保持一致。其中暂存区的内容是指，将原节点和 [commit_id] 目标节点之间的「差异变更集」会放入 暂存区中。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("--mixed（默认）")]),t._v(" : 重置指针位置的同时，只保留工作区的内容。其中工作区的内容是指，将原节点和 [commit_id] 目标节点之间的「差异变更集」会放入工作区中。")])])]),t._v(" "),a("h3",{attrs:{id:"使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[t._v("#")]),t._v(" 使用场景:")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("--hard")]),t._v(" :")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("要放弃目前本地的所有改变時，即去掉所有 add 到暂存区的文件和工作区的文件，可以执行 "),a("code",[t._v("git reset -hard HEAD")]),t._v(" 来强制恢复 git 管理的文件夹的内容及状态；")])]),t._v(" "),a("li",[a("p",[t._v("真的想抛弃目标节点后的所有 "),a("code",[t._v("commit")]),t._v("（可能觉得目标节点到原节点之间的 commit 提交都是错了，之前所有的 commit 有问题）。")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("--soft")]),t._v(" :")]),t._v(" "),a("ol",[a("li",[t._v("使用--soft 合并 "),a("code",[t._v("commit")]),t._v(" 节点信息。假如想合并「当前节点」与「reset 目标节点」之间不具有太大意义的 commit 记录(可能是阶段性地频繁提交,就是开发一个功能的时候，改或者增加一个文件的时候就 commit，这样做导致一个完整的功能可能会好多个 commit 点，这时假如需要把这些 commit 整合成一个 commit 的时候)時，可以考虑使用 "),a("code",[t._v("git reset --soft [commit_id]")]),t._v(" 来让 commit 演进线图较为清晰。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("--mixed（默认）")]),t._v(" :")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("合并无意义的 "),a("code",[t._v("commit")]),t._v("，使 commit 演进线图较为清晰。与"),a("code",[t._v("--soft")]),t._v("相似，区别是需要多操作"),a("code",[t._v("git add")]),t._v("才能"),a("code",[t._v("git commit")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git add")]),t._v(" 错误文件到暂存区。移除所有 Index 暂存区中准备要提交的文件(Staged files)，可以执行 "),a("code",[t._v("git reset HEAD")]),t._v(" 来 Unstage 所有已列入 Index 暂存区 的待提交的文件。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git commit")]),t._v("提交某些错误代码，或者没有必要的文件也被 commit 上去，不想再修改错误再 commit（因为会留下一个错误 commit 点），可以回退到正确的 commit 点上，然后所有原节点和 reset 节点之间差异会返回工作目录，假如有个没必要的文件的话就可以直接删除了，再 commit 上去就 OK 了。")])])])])]),t._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[a("code",[t._v("git reset")]),t._v(" 的本质：所有模式都是通过 移动 "),a("code",[t._v("HEAD")]),t._v(" 和 "),a("code",[t._v("branch")]),t._v(" 的指针位置来实现重置。")]),t._v(" "),a("p",[a("code",[t._v("git reset")]),t._v(" 指令虽然可以用来撤销 "),a("code",[t._v("commit")]),t._v(" ，但它的实质行为并不是撤销，而是移动 "),a("code",[t._v("HEAD")]),t._v(" ，并且「捎带」上 "),a("code",[t._v("HEAD")]),t._v(" 所指向的 "),a("code",[t._v("branch")]),t._v("（如果有的话）。")]),t._v(" "),a("p",[t._v("也就是说，"),a("code",[t._v("git reset")]),t._v(' 指令的行为其实和它的字面意思 "reset"（重置）十分相符：它是用来重置 '),a("code",[t._v("HEAD")]),t._v(" 以及它所指向的 "),a("code",[t._v("branch")]),t._v(" 的位置的。")]),t._v(" "),a("p",[t._v("而 "),a("code",[t._v("git reset --hard HEAD^")]),t._v(" 之所以起到了撤销 "),a("code",[t._v("commit")]),t._v(" 的效果，是因为它把 "),a("code",[t._v("HEAD")]),t._v(" 和它所指向的 "),a("code",[t._v("branch")]),t._v(" 一起移动到了"),a("code",[t._v("当前 commit")]),t._v(" 的"),a("code",[t._v("父 commit")]),t._v(" 上，从而起到了「撤销」的效果：")]),t._v(" "),a("p",[t._v("Git 的历史只能往回看，不能向未来看，所以把 "),a("code",[t._v("HEAD")]),t._v(" 和 "),a("code",[t._v("branch")]),t._v(" 往回移动，就能起到撤回 "),a("code",[t._v("commit")]),t._v(" 的效果。")]),t._v(" "),a("p",[t._v("所以同理，"),a("code",[t._v("git reset --hard")]),t._v(" 不仅可以撤销提交，还可以用来把 HEAD 和 branch 移动到其他的任何地方。")]),t._v(" "),a("p",[t._v("譬如：可以将某个分支的代码完全覆盖另一个分支代码。")]),t._v(" "),a("p",[t._v("假设每个人有个开发分支，想隔一段时间就把自己的开发分支上的代码保持和测试分支一致，")]),t._v(" "),a("p",[t._v("以远程服务器名称为[remote_name]，分支有 [branch_dev]、[branch_test] 为例，则需要如下操作：")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将test分支上的代码完全覆盖dev分支，首先切换到dev分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch_dev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 然后直接设置代码给远程的test分支上的代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch_test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或简写")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch_test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行上面的命令后dev分支上的代码就完全被test分支上的代码覆盖了，注意只是本地分支，这时候还需要将本地分支强行推到远程分支。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -f\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h3",{attrs:{id:"参考文献"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzg4NzI3MTg4Mw==&mid=2247484030&idx=1&sn=a93641e3369cc6e57fd4342635fadfa6&chksm=cf8dbadaf8fa33cc015cd1a745f231064850262c913ea60d856c22b05fbe38fe1f19a0117246&token=38451548&lang=zh_CN#rd",target:"_blank",rel:"noopener noreferrer"}},[t._v("git reset 你不知道的三种模式"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"git-revert"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-revert"}},[t._v("#")]),t._v(" git revert")]),t._v(" "),a("p",[t._v("撤消操作。")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert HEAD~3 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#丢弃最近的三个commit，把状态恢复到最近的第四个commit，并且提交一个新的commit来记录这次改变。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert -n master~5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("master~2 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 丢弃从最近的第五个commit（包含）到第二个（不包含）,但是不自动生成commit，这个revert仅仅修改working tree和index。")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("ul",[a("li",[t._v("参考文档：\n"),a("ul",[a("li",[a("a",{attrs:{href:"https://blog.csdn.net/iaiti/article/details/116586882",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 的底层原理，reverse 和 reset 的区别，rebase 作用"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E9%87%8D%E7%BD%AE%E6%8F%AD%E5%AF%86",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git book"),a("OutboundLink")],1)])])])]),t._v(" "),a("h2",{attrs:{id:"git-stash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-stash"}},[t._v("#")]),t._v(" git stash")]),t._v(" "),a("p",[t._v("将工作区修改的文件暂存起来，文件会被暂存到 stash 脏暂存区。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("语法："),a("code",[t._v("git stash save|list|show|drop|pop|apply|clear...")])])]),t._v(" "),a("li",[a("p",[t._v("使用场景：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("主要用于保存当前工作区未提交的修改。例如有种场景：在 feature 分支做需求变动中，release 版本突然有缺陷需要处理，但是需求的代码因没开发完不能提交，所以需要先通过 "),a("code",[t._v("git stash save [msg]")]),t._v(" 将修改保存到本地缓存堆栈中，而且可以保存多个分支。然后切换到 hotfix 分支上进行 bug 的修复，修复完后切换回 feature，使用 "),a("code",[t._v("git stash apply [stash_hash]")]),t._v(" 从本地缓存堆栈中恢复修改内容。")])]),t._v(" "),a("li",[a("p",[t._v("pull 更新时保护本地修改的文件。")])])])])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 把本地的改动暂存起来")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash save "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行存储时，添加备注，方便查找。如查看记录：stash@{0}: On gp-blog: 我的工作笔记Git")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash pop "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 应用最近一次暂存的修改，并删除暂存的记录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash apply  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 应用某个存储,但不会把存储从存储列表中删除，默认使用第一个存储,即 stash@{0}，如果要使用其他个，git stash apply --index [stash_num] 。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash list "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看 stash 有哪些存储")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除所有缓存的 stash")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用git stash 后，可查看记录hash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" .git/refs/stash\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" .git/logs/refs/stash\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" .git/refs/heads/master\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看所有对象内容")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cat-file --batch-check --batch-all-objects\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查询sha-1对应的文件内容.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cat-file -p "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sha-1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("ul",[a("li",[a("p",[t._v("推荐：")]),t._v(" "),a("ul",[a("li",[t._v("需要暂存的时候，不要直接使用 "),a("code",[t._v("git stash")]),t._v(" 命令进行暂存下来，而是使用 "),a("code",[t._v('git stash save "message..."')]),t._v(" 这种方式，给本次的提交做一个信息的记录。因为 "),a("code",[t._v("git stash list")]),t._v(" 查看所有的暂存列表的时候会更清晰明了。")]),t._v(" "),a("li",[t._v("少用 "),a("code",[t._v("git stash pop")]),t._v("恢复暂存记录，改用为 "),a("code",[t._v("git stash apply --index [stash_num]")]),t._v(" 的方式，因为 apply 不会清空已有的 stash 的列表项，并且能应用到当前的工作区，不需要这个暂存的话，再手动清除就可以了。")])])])]),t._v(" "),a("h3",{attrs:{id:"参考文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[t._v("#")]),t._v(" 参考文档")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/94216223",target:"_blank",rel:"noopener noreferrer"}},[t._v("我们随手做的 git stash，究竟干了什么？"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"git-tag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-tag"}},[t._v("#")]),t._v(" git tag")]),t._v(" "),a("p",[t._v("git 下打标签其实有 2 种情况")]),t._v(" "),a("ul",[a("li",[t._v("轻量级的：它其实是一个独立的分支,或者说是一个不可变的分支.指向特定提交对象的引用")]),t._v(" "),a("li",[t._v("带附注的：实际上是存储在仓库中的一个独立对象，它有自身的校验和信息，包含着标签的名字，标签说明，标签本身也允许使用 GNU Privacy Guard (GPG) 来签署或验证,电子邮件地址和日期，一般我们都建议使用含附注型的标签，以便保留相关信息")])]),t._v(" "),a("h3",{attrs:{id:"git-tag使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-tag使用"}},[t._v("#")]),t._v(" "),a("code",[t._v("git tag")]),t._v("使用")]),t._v(" "),a("p",[t._v("创建、删除、查看标签操作。")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建本地tag")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -a "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" -m "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag_msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交本地tag")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" --tags\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除本地tag")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除远程tag")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" :refs/tags/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tag_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取远程版本tag")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" tag "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h1",{attrs:{id:"进阶"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进阶"}},[t._v("#")]),t._v(" 进阶")]),t._v(" "),a("h2",{attrs:{id:"合并分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并分支"}},[t._v("#")]),t._v(" 合并分支")]),t._v(" "),a("h3",{attrs:{id:"合并分支所有提交的-commit-hash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并分支所有提交的-commit-hash"}},[t._v("#")]),t._v(" 合并分支所有提交的 "),a("code",[t._v("[commit_hash]")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("语法： "),a("code",[t._v("git merge [branch_name]")])])]),t._v(" "),a("li",[a("p",[t._v("使用场景：")])])]),t._v(" "),a("p",[t._v("当需要在当前分支并入其他分支的完整提交时，那么就可以使用 "),a("code",[t._v("git merge [branch_name]")]),t._v("了。")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch 相当于是从远程获取最新到本地，不会自动merge\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch orgin master //将远程仓库的master分支下载到本地当前branch中\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log -p master "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("origin/master //比较本地的master分支和origin/master分支的差别\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge origin/master //进行合并\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull：相当于是从远程获取最新版本并merge到本地\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin master\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("远程主机名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("远程分支名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("本地分支名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将远程分支拉到本地")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建自己本地分支并且关联远程分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("local_remote_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拉取最新远程分支代码")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("远程分支名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])]),a("h3",{attrs:{id:"合并分支指定提交的-commit-hash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并分支指定提交的-commit-hash"}},[t._v("#")]),t._v(" 合并分支指定提交的 "),a("code",[t._v("[commit_hash]")])]),t._v(" "),a("ul",[a("li",[t._v("语法：\n"),a("ul",[a("li",[a("code",[t._v("git cherry-pick [commit_hash]")])]),t._v(" "),a("li",[a("code",[t._v("git cherry-pick [first_commit_hash]...[last_commit_hash]")]),t._v(": 连续 commit_hash 合并模式。一个左开右闭的区间，表示 first_commit_hash 提交带来的代码不会被合并过去")]),t._v(" "),a("li",[a("code",[t._v("git cherry-pick [first_commit_hash]^...[last_commit_hash]")]),t._v("：连续 commit_hash 合并模式。表示包含 first_commit_hash 到 last_commit_hash 在内的提交都会被合并过去")])])])]),t._v(" "),a("p",[a("code",[t._v("cherry-pick")]),t._v(" 译为 "),a("code",[t._v("精选")]),t._v("，从字面意思即可知道，其可以挑选某分支的单个指定提交 "),a("code",[t._v("[commit_hash]")]),t._v(" ，并作为一个新的提交引入到当前分支上。")]),t._v(" "),a("ul",[a("li",[t._v("使用场景：")])]),t._v(" "),a("p",[t._v("当需要在当前分支并入其他分支的提交时，如果不想对其他整个分支进行合并，而是只想将其他分支的某一次提交并入到本地当前分支上，那么就要使用 "),a("code",[t._v("git cherry-pick")]),t._v(" 了。")]),t._v(" "),a("ul",[a("li",[t._v("案例：")])]),t._v(" "),a("p",[t._v("以"),a("code",[t._v("origin/feature_one")]),t._v("和"),a("code",[t._v("origin/feature_two")]),t._v("合并到"),a("code",[t._v("origin/master")]),t._v("为例。")]),t._v(" "),a("p",[t._v("依次执行以下两条指令 git cherry-pick 2a9e17f 、git cherry-pick 2a9e17e，合并过程中如果出现冲突，解决冲突后进行 "),a("code",[t._v("git add .")]),t._v(", 接着执行 "),a("code",[t._v("git cherry-pick --continue")]),t._v("，最后将合并后的 feature 提交到 master 即可。")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("E:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("git"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog show\n\n254f424 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HEAD -"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master, origin/master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": checkout: moving from feature_one to master\n5cd8f90 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("origin/master, master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": commit "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cherry-pick"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": style:游戏绑\n定页面合并为注册页面；feat:支付模块从v1升级到v2\n2a9e17e "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("origin/feature_one,feature_one"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": ccommit: style:游戏绑\n定页面合并为注册页面\n2a9e17f "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("origin/feature_two,feature_two"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": ccommit: feat:支付模块从v1升级到v2\n\nE:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("git"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cherry-pick 2a9e17f\nE:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("git"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cherry-pick 2a9e17e "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 遇到冲突解决冲突")]),t._v("\nAuto-merging package.json\nCONFLICT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": Merge conflict "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" package.json\nAuto-merging dev-log.md\nCONFLICT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": Merge conflict "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" dev-log.md\nerror: could not apply 2a9e17e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". style:游戏绑\n定页面合并为注册页面\nhint: after resolving the conflicts, mark the corrected paths\nhint: with "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git add <paths>'")]),t._v(" or "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git rm <paths>'")]),t._v("\nhint: and commit the result with "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git commit'")]),t._v("\n\nE:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("git"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cherry-pick --continue "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 若使用连续commit_hash合并模式提交，解决冲突合并后执行本命令可恢复其合并队列进行下个合并。")]),t._v("\nE:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("git"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 解决好冲突将内容添加到暂存区")]),t._v("\nE:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("git"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交最新特性到master")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br")])]),a("h2",{attrs:{id:"git-reset-删除并回滚到指定-commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-删除并回滚到指定-commit"}},[t._v("#")]),t._v(" git reset 删除并回滚到指定 commit")]),t._v(" "),a("h2",{attrs:{id:"git-commit-之后，想撤销-commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-之后，想撤销-commit"}},[t._v("#")]),t._v(" git commit 之后，想撤销 commit")]),t._v(" "),a("p",[t._v("在开发过程中，偶尔会发生 git commit 注释写错的情况，")]),t._v(" "),a("p",[t._v("如果只需要修改 commit 的注释内容，可以使用命令 "),a("code",[t._v("git commit --amend")]),t._v("，届时会进入默认 vim 编辑器，修改注释完毕后保存退出页面即可修改注释。")]),t._v(" "),a("h2",{attrs:{id:"git-push-时保持版本没获得关联-fatal-refusing-to-merge-unrelated-histories"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-push-时保持版本没获得关联-fatal-refusing-to-merge-unrelated-histories"}},[t._v("#")]),t._v(" git push 时保持版本没获得关联 "),a("code",[t._v("fatal: refusing to merge unrelated histories")])]),t._v(" "),a("p",[t._v("在多端开发时可能会遇到这样的情景：")]),t._v(" "),a("p",[t._v("A 和 B 开发项目 Lib，然后在 A、B 开发过程中分别多次提交源码，突然的 A 或 B 遇到本地仓库源码与远程仓库源码提交历史不同步，某些提交历史不关联，然后 Git 冒红"),a("code",[t._v("fatal: refusing to merge unrelated histories")])]),t._v(" "),a("p",[a("code",[t._v("提交历史不关联")]),t._v("的情况主要发生在如下情景：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("git merge")])]),t._v(" "),a("li",[a("code",[t._v("git pull")])]),t._v(" "),a("li",[a("code",[t._v("git push")])])]),t._v(" "),a("p",[t._v("针对这种报错，Git 给出的方案是在上述情景中后缀添加属性声明，允许不关联历史合并操作"),a("code",[t._v("--allow-unrelated-histories")]),t._v("。")]),t._v(" "),a("p",[t._v("然后轻轻地一敲"),a("code",[t._v("git pull origin master --allow-unrelated-histories")]),t._v("，Git 将会强制合并不关联历史版本。Bingo！")]),t._v(" "),a("h1",{attrs:{id:"设置-git-短命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置-git-短命令"}},[t._v("#")]),t._v(" 设置 Git 短命令")]),t._v(" "),a("p",[t._v("对我这种喜欢敲命令而不用图形化工具的爱好者来说，设置短命令可以很好的提高效率。")]),t._v(" "),a("p",[t._v("下面介绍两种设置短命令的方式")]),t._v(" "),a("ol",[a("li",[t._v("命令式 设置")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global alias.ps push\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("全局配置文件 设置")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" ~/.gitconfig\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 写入内容")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("alias"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      co "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" checkout\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" push\n      pl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pull\n      mer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" merge --no-ff\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cherry-pick\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("ul",[a("li",[t._v("使用短命令")])]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等同于 git cherry-pick <commitHash>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commitHash"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h1",{attrs:{id:"遇见冲突问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#遇见冲突问题"}},[t._v("#")]),t._v(" 遇见冲突问题")]),t._v(" "),a("h2",{attrs:{id:"conflict-content-merge-conflict-in-deploy-sh-automatic-merge-failed-fix-conflicts-and-then-commit-the-result"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conflict-content-merge-conflict-in-deploy-sh-automatic-merge-failed-fix-conflicts-and-then-commit-the-result"}},[t._v("#")]),t._v(" "),a("code",[t._v("CONFLICT (content): Merge conflict in deploy.sh. Automatic merge failed; fix conflicts and then commit the result.")])]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("git pull")]),t._v(" 下拉数据时，遇到合并文件冲突问题")]),t._v(" "),a("p",[t._v("解决：")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("code "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge --continue\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h1",{attrs:{id:"参考文档-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文档-2"}},[t._v("#")]),t._v(" 参考文档")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://git-scm.com/book/en/v2",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git Document"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.twicetech.top",target:"_blank",rel:"noopener noreferrer"}},[t._v("本人博客"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);